print(__doc__)
from sklearn.linear_model import BayesianRidge,LinearRegression
import numpy as np
import matplotlib.pyplot as plt
from scipy import stats
# print(np.random.seed(0))
n_samples=100
n_features=100
x=np.random.randn(n_samples,n_features)
lambda_=4
w=np.zeros(n_features)
# print(w)
relevant_features=np.random.randint(0,n_features,10)
for i in relevant_features:
  w[i]=stats.norm.rvs(loc=0,scale=1./np.sqrt(lambda_))
#   print(np.sqrt(lambda_))
#   print(w[i])
# print(relevant_features)
alpha_=50
noise=stats.norm.rvs(loc=0,scale=1./np.sqrt(alpha_),size=n_samples)
# print(noise)
y=np.dot(x,w)+noise
# print(y)
clf=BayesianRidge(compute_score=True)
clf.fit(x,y)
ols=LinearRegression()
ols.fit(x,y)
# plt.plot(clf.coef_)
# print(clf.coef_)
plt.plot(ols.coef_)


# print(x)

